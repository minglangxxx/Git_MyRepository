<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:context="http://www.springframework.org/schema/context" 
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:tx="http://www.springframework.org/schema/tx" 
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					   http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	   					   http://www.springframework.org/schema/context 
	   					   http://www.springframework.org/schema/context/spring-context-4.2.xsd 
	   					   http://www.springframework.org/schema/aop 
	   					   http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
	   					   http://www.springframework.org/schema/tx 
	   					   http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">
	<!-- 只会扫描包下的注解 -->
    <context:component-scan base-package="com.spring_day3.jtDemo"/>
    <!--只会扫描属性上的注解-->
    <context:annotation-config/>
    <!-- 指定spring读取指定目录的properties配置文件 	-->
  	<context:property-placeholder location="classpath:db.properties"/>
    <!-- 将连接池放入spring容器 -->
    <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
<!--     将JDBCTemplate放入spring容器，继承JdbcDaoSupport后不需要再自己创建
		 jdbcTemplate模板，父类中已经封装了 -->
<!--     <bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean> -->
    <!-- 将UserDao放入spring容器 -->
    <bean name="UserDaoImpl" class="com.spring_day3.jtDemo.UserDaoImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

</beans>
